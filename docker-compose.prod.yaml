version: "3.8"

services:
  poll-db:
    image: postgres:14-alpine
    container_name: poll-db
    restart: always
#    ports:
#      - "5432:5432"
    volumes:
      - poll-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata

  poll-mongo:
    image: mongo:4.4
    container_name: poll-mongo
    restart: always
#    ports:
#      - "27017:27017"
    env_file:
      - .env
    volumes:
      - mongodb_data:/data/db

  poll-backend:
    build:
      context: .
      dockerfile: _configs/Dockerfile
      target: 'production-stage'
    container_name: poll-backend
    env_file:
      - .env
    environment:
      WAIT-HOSTS: "poll-db"
    volumes:
      - ./src:/home/poll_users/app
#    ports:
#      - "5000:5000"
    tty: true
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.poll-backend.rule=Host(`testdesk.ru`) && PathPrefix(/api)"
      - "traefik.http.routers.poll-backend.entrypoints=web"
      - "traefik.http.services.poll-backend.loadbalancer.server.port=80"
    depends_on:
      - poll-db
      - poll-mongo
    user: "${UID}:${GID}"


  poll-frontend:
    build:
      context: ../poll_frontend
      dockerfile: _configs/Dockerfile
      target: 'production-stage'
    container_name: poll-frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.poll-frontend.rule=Host(`testdesk.ru`)"
      - "traefik.http.routers.poll-frontend.entrypoints=web"


    depends_on:
      - poll-backend

  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--configFile=/etc/traefik/traefik.toml"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/traefik.toml:/etc/traefik/traefik.toml:ro"
      - "./traefik/certificates:/certificates"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`testdesk.ru`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=web"
      -  "traefik.http.routers.api.middlewares=auth"
      -  "traefik.http.middlewares.auth.basicauth.users=admin:$apr1$AnyWut1o$.SeYd/4jFHE6M44ptv3r30"

    ports:
      - "5000:5000"
#      - "443:443"

    depends_on:
      - poll-frontend


volumes:
  poll-db-data:
  mongodb_data:
